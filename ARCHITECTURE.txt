# System Architecture Overview

```
┌─────────────────────────────────────────────────────────────────────────┐
│                     BTC CROWDFUND ANALYTICS                              │
│                         Current Status                                   │
└─────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────┐
│                           FRONTEND (Working ✅)                          │
├─────────────────────────────────────────────────────────────────────────┤
│  Browser → http://localhost:8000                                         │
│                                                                          │
│  Pages:                                                                  │
│  ┌────────────┐  ┌────────────┐  ┌────────────┐                        │
│  │ Dashboard  │  │  Settings  │  │  Webhook   │                        │
│  │  (Index)   │  │            │  │   Logs     │                        │
│  │            │  │            │  │            │                        │
│  │ • KPI Cards│  │ • Config   │  │ • Recent   │                        │
│  │ • Line Chart│  │ • Setup   │  │   Events   │                        │
│  │ • Doughnut │  │ • Webhook  │  │ • Verify   │                        │
│  │            │  │   URL      │  │   Status   │                        │
│  └────────────┘  └────────────┘  └────────────┘                        │
│                                                                          │
│  Jinja2 Templates + Chart.js + Custom CSS                               │
└─────────────────────────────────────────────────────────────────────────┘
                                    │
                                    ▼
┌─────────────────────────────────────────────────────────────────────────┐
│                        FASTAPI APP (Working ✅)                          │
├─────────────────────────────────────────────────────────────────────────┤
│                                                                          │
│  Routes:                          Modules:                              │
│  ┌──────────────────────┐        ┌─────────────────────┐               │
│  │ GET  /               │───────▶│  views.py           │               │
│  │ GET  /settings       │        │  • Dashboard        │               │
│  │ GET  /logs           │        │  • Settings         │               │
│  │ POST /refresh        │        │  • Logs             │               │
│  │ POST /webhook        │        │  • Refresh          │               │
│  │ GET  /health         │        └─────────────────────┘               │
│  └──────────────────────┘                                               │
│           │                       ┌─────────────────────┐               │
│           └──────────────────────▶│  analytics.py       │               │
│                                   │  • Aggregate data   │               │
│                                   │  • Bucket by day    │               │
│                                   │  • Compute KPIs     │               │
│                                   └─────────────────────┘               │
│                                                                          │
│                                   ┌─────────────────────┐               │
│                                   │  repo.py            │               │
│                                   │  • CRUD operations  │               │
│                                   │  • Upsert invoices  │               │
│                                   │  • Query logs       │               │
│                                   └─────────────────────┘               │
└─────────────────────────────────────────────────────────────────────────┘
                                    │
                                    ▼
┌─────────────────────────────────────────────────────────────────────────┐
│                      DATABASE (Working ✅)                               │
├─────────────────────────────────────────────────────────────────────────┤
│  SQLite: btc_crowdfund.db                                               │
│                                                                          │
│  ┌──────────────────┐  ┌──────────────────┐  ┌────────────────────┐   │
│  │ Invoice          │  │ EventLog         │  │ SourceProject      │   │
│  ├──────────────────┤  ├──────────────────┤  ├────────────────────┤   │
│  │ id (PK)          │  │ id (PK)          │  │ id (PK)            │   │
│  │ store_id         │  │ received_at      │  │ title              │   │
│  │ status           │  │ signature        │  │ amount_target      │   │
│  │ amount           │  │ verified (bool)  │  │ amount_raised      │   │
│  │ amount_btc       │  │ event_type       │  │ created_at         │   │
│  │ created_at       │  │ payload (JSON)   │  │ source             │   │
│  │ paid_at          │  └──────────────────┘  └────────────────────┘   │
│  │ invoice_metadata │                                                   │
│  └──────────────────┘                                                   │
│                                                                          │
│  📊 Current: 30 demo invoices seeded                                    │
└─────────────────────────────────────────────────────────────────────────┘


┌─────────────────────────────────────────────────────────────────────────┐
│               EXTERNAL INTEGRATIONS (NOT WORKING ❌)                     │
└─────────────────────────────────────────────────────────────────────────┘

╔═════════════════════════════════════════════════════════════════════════╗
║                      BTCPAY SERVER (Template Only)                      ║
╠═════════════════════════════════════════════════════════════════════════╣
║                                                                         ║
║  Expected Integration:                                                  ║
║  ┌─────────────────────────────────────────────────────────┐           ║
║  │  BTCPay Greenfield API                                  │           ║
║  │  https://demo.btcpayserver.org/api/v1/                  │           ║
║  │                                                          │           ║
║  │  Endpoints We Use:                                       │           ║
║  │  • GET  /stores/{storeId}/invoices  ← Fetch invoices   │           ║
║  │  • GET  /stores/{storeId}/invoices/{id} ← Get one      │           ║
║  │  • GET  /stores/{storeId}/webhooks  ← List webhooks    │           ║
║  │  • POST /stores/{storeId}/webhooks  ← Register webhook │           ║
║  │                                                          │           ║
║  │  Authentication:                                         │           ║
║  │  Authorization: token {api_key}                         │           ║
║  └─────────────────────────────────────────────────────────┘           ║
║                          │                                              ║
║                          │ ❌ NEVER TESTED                              ║
║                          ▼                                              ║
║  ┌─────────────────────────────────────────────────────────┐           ║
║  │  app/btcpay_client.py                                    │           ║
║  │  ┌────────────────────────────────────────────────────┐ │           ║
║  │  │ class BTCPayClient:                                 │ │           ║
║  │  │   async def get_invoices(days=30)                  │ │           ║
║  │  │   async def get_invoice(invoice_id)                │ │           ║
║  │  │   async def ensure_webhook(webhook_url)            │ │           ║
║  │  │   def _add_auth_header()                           │ │           ║
║  │  │   def _build_url(path)                             │ │           ║
║  │  └────────────────────────────────────────────────────┘ │           ║
║  └─────────────────────────────────────────────────────────┘           ║
║                                                                         ║
║  Status: ⚠️  Code exists but never called real API                     ║
║  Issues: • Don't know if response format matches assumptions           ║
║          • No error handling for real API errors                       ║
║          • No pagination implemented                                   ║
║          • No rate limit handling                                      ║
║                                                                         ║
╚═════════════════════════════════════════════════════════════════════════╝

╔═════════════════════════════════════════════════════════════════════════╗
║                    WEBHOOK SYSTEM (Template Only)                       ║
╠═════════════════════════════════════════════════════════════════════════╣
║                                                                         ║
║  Expected Flow:                                                         ║
║  ┌─────────────────────────────────────────────────────────┐           ║
║  │  BTCPay Server                                           │           ║
║  │  (When invoice is paid/expired)                          │           ║
║  └─────────────────────────────────────────────────────────┘           ║
║                          │                                              ║
║                          │ POST with BTCPay-Sig header                 ║
║                          │ ❌ NEVER TESTED                              ║
║                          ▼                                              ║
║  ┌─────────────────────────────────────────────────────────┐           ║
║  │  POST /webhook                                           │           ║
║  │                                                          │           ║
║  │  app/webhook.py:                                         │           ║
║  │  ┌────────────────────────────────────────────────────┐ │           ║
║  │  │ 1. Read raw body                                    │ │           ║
║  │  │ 2. Get BTCPay-Sig header                           │ │           ║
║  │  │ 3. Compute HMAC-SHA256                             │ │           ║
║  │  │ 4. Compare signatures (constant-time)              │ │           ║
║  │  │ 5. If valid:                                        │ │           ║
║  │  │    • Parse invoice data                            │ │           ║
║  │  │    • Upsert to database                            │ │           ║
║  │  │    • Log delivery                                  │ │           ║
║  │  │ 6. If invalid:                                      │ │           ║
║  │  │    • Reject with 401                               │ │           ║
║  │  │    • Log failed attempt                            │ │           ║
║  │  └────────────────────────────────────────────────────┘ │           ║
║  └─────────────────────────────────────────────────────────┘           ║
║                                                                         ║
║  Status: ⚠️  Code exists, unit tests pass, but never tested with real  ║
║  Issues: • HMAC verification untested with real BTCPay signatures      ║
║          • Don't know if header name is correct                        ║
║          • No webhook retry logic                                      ║
║          • No idempotency key checking                                 ║
║                                                                         ║
╚═════════════════════════════════════════════════════════════════════════╝

╔═════════════════════════════════════════════════════════════════════════╗
║                   ANGOR PROTOCOL (Placeholder Only)                     ║
╠═════════════════════════════════════════════════════════════════════════╣
║                                                                         ║
║  Expected Architecture:                                                 ║
║  ┌─────────────────────────────────────────────────────────┐           ║
║  │  Angor Ecosystem                                         │           ║
║  │                                                          │           ║
║  │  ┌──────────────┐         ┌────────────────┐           │           ║
║  │  │ Bitcoin      │         │ Nostr Network  │           │           ║
║  │  │ Blockchain   │         │ (Metadata)     │           │           ║
║  │  │ (Actual $$)  │         │                │           │           ║
║  │  └──────────────┘         └────────────────┘           │           ║
║  │         │                         │                     │           ║
║  │         └────────┬────────────────┘                     │           ║
║  │                  │                                      │           ║
║  │         ┌────────▼────────┐                            │           ║
║  │         │  Angor Hub      │                            │           ║
║  │         │  hub.angor.io   │                            │           ║
║  │         │  (Aggregator?)  │                            │           ║
║  │         └─────────────────┘                            │           ║
║  └─────────────────────────────────────────────────────────┘           ║
║                          │                                              ║
║                          │ ❌ API UNKNOWN                               ║
║                          ▼                                              ║
║  ┌─────────────────────────────────────────────────────────┐           ║
║  │  app/angor_adapter.py                                    │           ║
║  │  ┌────────────────────────────────────────────────────┐ │           ║
║  │  │ Strategy 1: Load data/angor_demo.json ✅           │ │           ║
║  │  │ Strategy 2: Fetch from hub.angor.io ❌             │ │           ║
║  │  │ Strategy 3: Nostr client (not implemented) ❌      │ │           ║
║  │  └────────────────────────────────────────────────────┘ │           ║
║  └─────────────────────────────────────────────────────────┘           ║
║                                                                         ║
║  Status: ⚠️  Only demo JSON works                                      ║
║  Issues: • No Angor Hub API documentation found                        ║
║          • Don't know API endpoints or response format                 ║
║          • No Nostr client integration                                 ║
║          • Don't know which NIPs Angor uses                            ║
║          • No WebSocket/real-time updates                              ║
║                                                                         ║
╚═════════════════════════════════════════════════════════════════════════╝


┌─────────────────────────────────────────────────────────────────────────┐
│                         TESTING STATUS                                   │
├─────────────────────────────────────────────────────────────────────────┤
│                                                                          │
│  Unit Tests: ✅ 17/17 passing                                           │
│  ┌────────────────────────────────────────────────────────────────┐    │
│  │ • Webhook signature verification (4 tests) ✅                  │    │
│  │ • Invoice status mapping (4 tests) ✅                          │    │
│  │ • Timestamp parsing (3 tests) ✅                               │    │
│  │ • Analytics aggregation (3 tests) ✅                           │    │
│  │ • Daily bucketing (1 test) ✅                                  │    │
│  │ • BTCPay header building (2 tests) ✅                          │    │
│  └────────────────────────────────────────────────────────────────┘    │
│                                                                          │
│  Integration Tests: ❌ 0 tests                                          │
│  ┌────────────────────────────────────────────────────────────────┐    │
│  │ • Real BTCPay API calls ❌                                     │    │
│  │ • Real webhook delivery ❌                                     │    │
│  │ • Database migrations ❌                                       │    │
│  │ • End-to-end user flows ❌                                     │    │
│  └────────────────────────────────────────────────────────────────┘    │
│                                                                          │
└─────────────────────────────────────────────────────────────────────────┘


┌─────────────────────────────────────────────────────────────────────────┐
│                       DEPLOYMENT STATUS                                  │
├─────────────────────────────────────────────────────────────────────────┤
│                                                                          │
│  Current:     Local development only (localhost:8000)                   │
│  Hosting:     ❌ Not deployed                                           │
│  Database:    SQLite file (btc_crowdfund.db)                            │
│  SSL/HTTPS:   ❌ Not configured (required for webhooks!)                │
│  Domain:      ❌ None                                                    │
│  Monitoring:  ❌ None (just console logs)                               │
│  Backups:     ❌ None                                                    │
│                                                                          │
└─────────────────────────────────────────────────────────────────────────┘


╔═════════════════════════════════════════════════════════════════════════╗
║                          CRITICAL GAPS                                  ║
╠═════════════════════════════════════════════════════════════════════════╣
║                                                                         ║
║  1. 🔴 NO REAL BTCPay CONNECTION                                        ║
║     • Have never called actual BTCPay API                               ║
║     • Don't know if our assumptions about data format are correct       ║
║     • Need testnet/demo BTCPay instance to test                         ║
║                                                                         ║
║  2. 🔴 NO WEBHOOK TESTING                                               ║
║     • HMAC verification written but never tested with real signature    ║
║     • Need ngrok or public URL to receive webhooks                      ║
║     • Don't know if BTCPay header format matches our code               ║
║                                                                         ║
║  3. 🔴 ANGOR API UNKNOWN                                                ║
║     • Can't find official API documentation                             ║
║     • Hub URL exists but API endpoints unknown                          ║
║     • No Nostr integration whatsoever                                   ║
║                                                                         ║
║  4. 🟡 BTC PRECISION LOSS                                               ║
║     • Storing amounts as float (loses precision)                        ║
║     • Should use satoshis (integers) everywhere                         ║
║                                                                         ║
║  5. 🟡 NO DATABASE INDEXES                                              ║
║     • Will be slow with 1000+ invoices                                  ║
║     • Need indexes on created_at, status, store_id                      ║
║                                                                         ║
║  6. 🟡 NO CACHING                                                       ║
║     • Recomputes analytics on every page load                           ║
║     • Should add Redis caching layer                                    ║
║                                                                         ║
║  7. 🟡 POOR ERROR HANDLING                                              ║
║     • API errors just print and return empty list                       ║
║     • No user-facing error messages                                     ║
║     • No error tracking (Sentry, etc.)                                  ║
║                                                                         ║
╚═════════════════════════════════════════════════════════════════════════╝


┌─────────────────────────────────────────────────────────────────────────┐
│                     RECOMMENDED NEXT STEPS                               │
├─────────────────────────────────────────────────────────────────────────┤
│                                                                          │
│  Phase 1: BTCPay Real Integration (2-3 days)                            │
│  ┌────────────────────────────────────────────────────────────────┐    │
│  │ 1. Set up testnet.demo.btcpayserver.org account                │    │
│  │ 2. Generate API key with proper permissions                    │    │
│  │ 3. Update .env with real credentials                           │    │
│  │ 4. Test get_invoices() with real API                           │    │
│  │ 5. Verify response format matches our code                     │    │
│  │ 6. Set up ngrok tunnel for webhook testing                     │    │
│  │ 7. Configure webhook in BTCPay                                 │    │
│  │ 8. Create test invoice and verify webhook delivery             │    │
│  │ 9. Fix any bugs found                                          │    │
│  └────────────────────────────────────────────────────────────────┘    │
│                                                                          │
│  Phase 2: Angor Research (2-3 days)                                     │
│  ┌────────────────────────────────────────────────────────────────┐    │
│  │ 1. Reverse engineer hub.angor.io API                           │    │
│  │ 2. Document API endpoints and response format                  │    │
│  │ 3. Test API calls and update adapter                           │    │
│  │ 4. Research Nostr NIPs used by Angor                           │    │
│  │ 5. Add python-nostr dependency                                 │    │
│  │ 6. Implement Nostr client for project events                   │    │
│  └────────────────────────────────────────────────────────────────┘    │
│                                                                          │
│  Phase 3: Production Hardening (1 week)                                 │
│  ┌────────────────────────────────────────────────────────────────┐    │
│  │ 1. Fix BTC precision (use satoshis)                            │    │
│  │ 2. Add database indexes                                        │    │
│  │ 3. Add Redis caching                                           │    │
│  │ 4. Improve error handling                                      │    │
│  │ 5. Add proper logging (structlog)                              │    │
│  │ 6. Deploy to cloud platform                                    │    │
│  └────────────────────────────────────────────────────────────────┘    │
│                                                                          │
└─────────────────────────────────────────────────────────────────────────┘
```

**Legend:**
- ✅ Working and tested
- ⚠️  Exists but not tested with real services
- ❌ Not implemented or not working
- 🔴 Critical blocker
- 🟡 Important but not blocking

**Summary:** MVP is functionally complete in demo mode, but has ZERO real integration with BTCPay Server, Angor Protocol, or Nostr. Next critical step is testing with real BTCPay API.
